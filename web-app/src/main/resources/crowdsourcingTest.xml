<?xml version="1.0"?>
<scxml xmlns="http://www.w3.org/2005/07/scxml"
       version="1.0"
       datamodel="jexl"
       initial="init"
       name="crowdsourcing">

    <!-- 请假单需要的数据-->
    <datamodel>
        <data id="deployee" expr=""></data>
        <data id="taskName" expr=""></data>
        <data id="taskDescription" expr=""></data>
        <data id="dueDate"></data>

        <data id="judgeCount" expr=""></data>
        <data id="decomposeCount" expr=""></data>
        <data id="decomposeVoteCount" expr=""></data>
        <data id="solveCount" expr=""></data>
        <data id="solveVoteCount" expr=""></data>
        <data id="steps" expr="0"></data>
    </datamodel>

    <state id="init">
        <onentry>
            <log label="init" expr="'init state entry ,begin to initialization'"/>
            <script>
                taskName=crowdSourcingTask.getTaskName();
                taskDescription=crowdSourcingTask.getTaskDescription();
                judgeCount = crowdSourcingTask.getTaskJudgeCount();
                decomposeCount= crowdSourcingTask.getTaskDecomposeCount();
                decomposeVoteCount= crowdSourcingTask.getTaskDecomposeVoteCount();
                solveCount= crowdSourcingTask.getTaskSolveCount();
                solveVoteCount= crowdSourcingTask.getTaskSolveVoteCount();
            </script>
            <log label="init" expr="'initialization complete'"></log>
        </onentry>
        <transition target="judging">
            <log label="init" expr="'init state transition to judging'"/>
        </transition>
        <onexit>
            <log label="init" expr="'init state exit'"/>
        </onexit>
    </state>

    <!-- 判断 -->

    <state id="judging">
        <datamodel>
            <data id="complexCount" expr="0"></data>
            <data id="simpleCount" expr="0"></data>
        </datamodel>
        <onentry>
            <log label="judging" expr="'entry judging state'"/>
            <userTask id="judge" name="JudgeTask" candidateGroups="Judger" instancesExpr="judgeCount">
                <form src="form/judge.jsp">

                </form>
            </userTask>
        </onentry>
        <onexit>
            <log label="judging" expr="'exit judging state'"/>
        </onexit>

        <transition event="judgeComplete">
            <if cond="_event.data.simple eq 0">
                <assign location="simpleCount" expr="simpleCount + 1"></assign>
                <log label="judging" expr="' simple'"/>

                <elseif cond="_event.data.simple eq 1"/>
                <assign location="complexCount" expr="complexCount + 1"></assign>
                <log label="judging" expr="' complex'"/>

                <else/>
                <log label="judging" expr="_event.data.simple"/>
            </if>
            <if cond="simpleCount + complexCount eq judgeCount">
                <send event="judgeCompleted"></send>
                <log label="judging" expr="'send event judgeCompleted'"/>
            </if>
            <log label="judging" expr="'judge state inner transition'"/>

        </transition>

        <transition event="judgeCompleted" cond="simpleCount gt complexCount" target="solving">
            <log label="judging" expr="'judge state transition to solving'"/>
        </transition>

        <transition event="judgeCompleted" cond="simpleCount lt complexCount" target="decomposing">
            <log label="judging" expr="'judge state transition to decomposing'"/>
        </transition>

    </state>


    <!-- 分解 -->
    <state id="decomposing">
        <datamodel>
            <data id="counted" expr="0"></data>
            <data id="step" expr="0"></data>
        </datamodel>
        <onentry>
            <log label="decomposing" expr="'entry decomposing state'"/>
            <userTask id="decompose" name="DecomposeTask" candidateGroups="Decomposer"
                      instancesExpr="decomposeCount">
                <form src="form/decompose.jsp">

                </form>
            </userTask>
        </onentry>

        <transition event="decomposeComplete">
            <assign location="counted" expr="counted + 1"></assign>
            <!-- 写入数据库: 谁分解成了什么 -->
            <log label="decomposing" expr="' inner transition ,decomposeComplete'"/>
        </transition>
        <transition cond="counted eq decomposeCount" target="decomposeVoting">

            <log label="decomposing" expr="' transition from decompose to decomposeVoting '"/>
        </transition>

        <onexit>
            <log label="decomposing" expr="'exit decomposing state'"/>
        </onexit>
    </state>

    <!-- 分解投票 -->

    <state id="decomposeVoting">
        <datamodel>
            <data id="counted" expr="0"></data>
        </datamodel>
        <onentry>
            <userTask id="decompose" name="DecomposeVoteTask" candidateGroups="DecomposeVoter"
                      instancesExpr="decomposeVoteCount">
                <form src="form/decomposeVote.jsp">

                </form>
            </userTask>
            <log label="decomposeVoting" expr="'entry decomposeVoting state'"/>
        </onentry>

        <transition event="decomposeVoteComplete">
            <assign location="counted" expr="counted + 1"></assign>
            <log label="decomposeVoting" expr="' inner transition ,decomposeVoteComplete'"/>
        </transition>

        <transition event="startSubMachine" cond="counted eq decomposeVoteCount" target="waitResulting">
            <!-- 查询数据库，找出分解最好的方案，启动这些实例 -->
            <!-- 投票结束了，选出最好的投票解决，调用本xml文件作为子状态机， -->

            <foreach array="crowdSourcingTaskArrayList" item="tempCrowdSourcingTask">
                <subStateMachine src="crowdsourcingTest.xml" instances="1">
                    <param name="crowdSourcingTask" expr="tempCrowdSourcingTask"></param>
                </subStateMachine>
                <assign location="steps" expr="steps + 1"></assign>
                <log label="decomposeVoting" expr="'startSubMachine '"/>
            </foreach>

            <log label="decomposeVoting" expr="'transition from decompose to decomposeVoting '"/>
        </transition>
    </state>

    <!-- wait children's event come -->
    <state id="waitResulting">
        <datamodel>
            <data id="count" expr="0"></data>
        </datamodel>
        <onentry>
            <log label="waitResulting" expr="'entry waitResulting state '"/>
        </onentry>
        <transition event="to_waitResult">
            <assign location="count" expr="count + 1"></assign>
            <log label="waitResulting" expr="' inner transition ,subStateMachine_to_end'"/>
        </transition>
        <transition cond="count eq steps" target="merging">
            <log label="waitResulting" expr="' transition from waitResulting to merging '"/>
        </transition>
    </state>

    <!-- assign merging task -->
    <state id="merging">
        <datamodel>
            <data id="count" expr="0"></data>
        </datamodel>
        <onentry>
            <log label="merging" expr="'entry merging state '"/>
            <!-- 自动化 归并任务,    -->
            <script>
                result = crowdSourcingTask.merge();
            </script>
        </onentry>

        <transition cond="result" target="end">
            <send event="to_waitResult" type="scxml" messageMode="TO_PARENT"></send>
            <log label="merging" expr="'transition from merging state to end '"/>
        </transition>

    </state>

    <!-- 解决 -->
    <state id="solving">
        <datamodel>
            <data id="counted" expr="0"></data>
        </datamodel>
        <onentry>
            <log label="solving" expr="'entry solving state '"/>
            <userTask id="solve" name="SolveTask" candidateGroups="Solver"
                      instancesExpr="solveCount">
                <form src="form/solve.jsp">

                </form>
            </userTask>
        </onentry>
        <transition event="solveComplete">
            <assign location="counted" expr="counted + 1"></assign>
            <log label="solving" expr="'solveComplete ,inner transition '"/>
        </transition>
        <transition cond="counted eq solveCount" target="solveVoting">
            <log label="solving" expr="' transition from solving to solveVoting'"/>
        </transition>
    </state>

    <!-- 解决投票 -->
    <state id="solveVoting">
        <datamodel>
            <data id="counted" expr="0"></data>
        </datamodel>
        <onentry>
            <log label="solveVoting" expr="' entry solveVoting state '"/>
            <userTask id="solveVoting" name="SolveVoteTask" candidateGroups="SolveVoter"
                      instancesExpr="solveVoteCount">
                <form src="form/solveVote.jsp">

                </form>
            </userTask>
        </onentry>
        <transition event="solveVoteComplete">
            <assign location="counted" expr="counted + 1"></assign>
            <!-- 保存到数据库  谁投了谁 -->
            <log label="solveVoting" expr="'solveVoteComplete ,inner transition '"/>
        </transition>
        <transition cond="counted eq solveVoteCount" target="end">
            <send event="to_waitResult" type="scxml" messageMode="TO_PARENT"></send>
            <log label="solveVoting" expr="'transition from solveVoting to end '"/>
        </transition>
    </state>

    <final id="end">
        <onentry>
            <log label="end" expr="' crowdsourcingTask end '"/>
        </onentry>
    </final>
</scxml>
